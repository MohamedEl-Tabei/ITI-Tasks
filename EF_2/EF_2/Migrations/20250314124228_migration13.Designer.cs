// <auto-generated />
using System;
using EF_2.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_2.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20250314124228_migration13")]
    partial class migration13
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_2.Models.Course", b =>
                {
                    b.Property<int>("Crs_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Crs_Id"));

                    b.Property<int>("Crs_Duration")
                        .HasColumnType("int");

                    b.Property<string>("Crs_Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Topic_Id")
                        .HasColumnType("int");

                    b.HasKey("Crs_Id");

                    b.HasIndex("Topic_Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("EF_2.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Dept_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dept_Desc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Dept_HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dept_Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dept_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EF_2.Models.Ins_Course", b =>
                {
                    b.Property<int>("crs_Id")
                        .HasColumnType("int");

                    b.Property<int>("Ins_Id")
                        .HasColumnType("int");

                    b.Property<int>("Evalution")
                        .HasColumnType("int");

                    b.HasKey("crs_Id", "Ins_Id");

                    b.HasIndex("Ins_Id");

                    b.ToTable("Ins_Course");
                });

            modelBuilder.Entity("EF_2.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Ins_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Dept_Id")
                        .HasColumnType("int");

                    b.Property<int>("Ins_Degree")
                        .HasColumnType("int");

                    b.Property<string>("Ins_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Dept_Id");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("EF_2.Models.Stud_Course", b =>
                {
                    b.Property<int>("Crs_Id")
                        .HasColumnType("int");

                    b.Property<int>("Stud_Id")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.HasKey("Crs_Id", "Stud_Id");

                    b.HasIndex("Stud_Id");

                    b.ToTable("StudentCourse");
                });

            modelBuilder.Entity("EF_2.Models.Student", b =>
                {
                    b.Property<int>("St_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("St_Id"));

                    b.Property<int>("Dept_Id")
                        .HasColumnType("int");

                    b.Property<string>("St_Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("St_Age")
                        .HasColumnType("int");

                    b.Property<string>("St_FName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("St_LName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("St_SuperId")
                        .HasColumnType("int");

                    b.HasKey("St_Id");

                    b.HasIndex("Dept_Id");

                    b.HasIndex("St_SuperId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EF_2.Models.Topic", b =>
                {
                    b.Property<int>("Top_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Top_Id"));

                    b.Property<string>("Top_Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Top_Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("EF_2.Models.Course", b =>
                {
                    b.HasOne("EF_2.Models.Topic", "Topic")
                        .WithMany("Courses")
                        .HasForeignKey("Topic_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("EF_2.Models.Ins_Course", b =>
                {
                    b.HasOne("EF_2.Models.Instructor", "Instructor")
                        .WithMany("ins_Courses")
                        .HasForeignKey("Ins_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_2.Models.Course", "Course")
                        .WithMany("ins_Courses")
                        .HasForeignKey("crs_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("EF_2.Models.Instructor", b =>
                {
                    b.HasOne("EF_2.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Dept_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EF_2.Models.Stud_Course", b =>
                {
                    b.HasOne("EF_2.Models.Course", "Course")
                        .WithMany("Stud_Courses")
                        .HasForeignKey("Crs_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_2.Models.Student", "Student")
                        .WithMany("Stud_Courses")
                        .HasForeignKey("Stud_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EF_2.Models.Student", b =>
                {
                    b.HasOne("EF_2.Models.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("Dept_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_2.Models.Student", "St_Super")
                        .WithMany("StudentsNotSuper")
                        .HasForeignKey("St_SuperId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("St_Super");
                });

            modelBuilder.Entity("EF_2.Models.Course", b =>
                {
                    b.Navigation("Stud_Courses");

                    b.Navigation("ins_Courses");
                });

            modelBuilder.Entity("EF_2.Models.Department", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("EF_2.Models.Instructor", b =>
                {
                    b.Navigation("ins_Courses");
                });

            modelBuilder.Entity("EF_2.Models.Student", b =>
                {
                    b.Navigation("Stud_Courses");

                    b.Navigation("StudentsNotSuper");
                });

            modelBuilder.Entity("EF_2.Models.Topic", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
